
document.addEventListener(
	"DOMContentLoaded", () => {
		// Переключаем класс toggle элемента по клику на этот же элемент. Параметр - классэлемента
let elementToggle = function(element) {
    if (document.querySelector(element)) {
        document.addEventListener('click', function(e) {
            if (e.target.closest(element)) {
                e.preventDefault();
                e.target.closest(element).classList.toggle('toggle');
            };
        });
    };
};

elementToggle('.footer__col');
// elementToggle('.nav-list__item--dropdown');


// Переключатель класса toggle у элемента по клику на другом элементе. Параметры - класс элемента по которому кликаем и класс элемента, которому переключаем класс toggle
let classToggler = function(elementBtn, elementTarget) {
    if (document.querySelector(elementBtn) && document.querySelector(elementTarget)) {
        document.querySelector(elementBtn).addEventListener('click', function () {
            document.querySelector(elementTarget).classList.toggle('toggle');
            document.querySelector(elementBtn).classList.toggle('toggle');
        });
    };
};


// Функция для перемещения элемента в другой элемент. Параметры: куда перемещаем, способ перемещения, что перемещаем
let movingConstructor = function(to, metod, block) {
    if (!(document.querySelector(block) && document.querySelector(to))) {
        console.log("переноса не будт");
        return;
    } else {
        switch (metod) {
            case 'prepend':
                document.querySelector(to).prepend(document.querySelector(block));
                break;

            case 'before':
                document.querySelector(to).before(document.querySelector(block));
                break;

            case 'after':
                document.querySelector(to).after(document.querySelector(block));
                break;

            default:
                document.querySelector(to).append(document.querySelector(block));
                break;
        };
    }
};


// функция будет перемещать блок в указанное место при определенной ширине экрана
let moving = function () {
    const windowWidth = window.innerWidth; // ширина экрана
    
    if (windowWidth <= 1200) {
        movingConstructor('.mobile-menu__wrapper', 'append', '.jsMenu');
        
    } else {
        movingConstructor('.header__nav', 'prepend', '.jsMenu');
        
    };
    
};

moving();
window.addEventListener('resize', moving);function loadData() {
	return new Promise((resolve, reject) => {
	  	// setTimeout не является частью решения
	  	// Код ниже должен быть заменен на логику подходящую для решения вашей задачи
		setTimeout(resolve, 100);
	})
};

loadData()
	.then(() => {
		let preloaderEl = document.getElementById('preloader');
		preloaderEl.classList.add('hidden');
		preloaderEl.classList.remove('visible');
	});if (document.querySelector('.js-burger')) {

    const btnBurger = document.querySelectorAll('.js-burger');

    // Открыть / закрыть бургер по клику на него
    function btnBurgerToggle(e) {
        e.target.classList.toggle('toggle');
    }

    // При ресайзе возвращаем кнопки в исходное состояние
    // function btnBurgerToggleClassRemove() {
    //     btnBurger.forEach(element => {
    //         element.classList.remove('toggle');
    //     });
    // }

    btnBurger.forEach(element => {
        element.addEventListener("click", btnBurgerToggle);
        // window.addEventListener("resize", btnBurgerToggleClassRemove);
    });
}

// по клику на .js-catalog-open-btn открываем / закрываем меню с категориями каталога
if (document.querySelector('.js-catalog-open-btn')) {
    const catalogOpenBtn = document.querySelectorAll('.js-catalog-open-btn');

    // Открыть / закрыть подменю по клику на .js-catalog-open-btn
    function toggleOpen(e) {

        const toggleBtn = (this.closest('.js-catalog-open-btn'));
        const toggleBody = toggleBtn.nextElementSibling;

        toggleBody.classList.toggle('toggle');
    }

    catalogOpenBtn.forEach(element => {
        element.addEventListener("click", toggleOpen);
        // window.addEventListener("resize", btnBurgerToggleClassRemove);
    });
}



// Инициализация слайдера swiper
// https://swiperjs.com/

function initSwiper() {

	if (document.querySelector('.jsB05Slider')) {
		const jsB10Slider = new Swiper('.jsB05Slider', {
			spaceBetween: 10,
			slidesPerView: 1,
			centeredSlides: true,
			// loop: true,

			pagination: {
				el: ".b05-slider-pagination",
				type: "fraction",
			},
		});
	};

	if (document.querySelector('.jsB10Slider')) {
		const jsB10Slider = new Swiper('.jsB10Slider', {
			spaceBetween: 10,
			slidesPerView: 1.05,
			// loop: true,
			breakpoints: {
				500: {
					slidesPerView: 1.8,
					spaceBetween: 10,
				},
				768: {
					slidesPerView: 2.4,
					spaceBetween: 20,
				},
				1401: {
					slidesPerView: 2.43,
					spaceBetween: 20,
				},
			},
			navigation: {
				nextEl: ".products-list__next",
				prevEl: ".products-list__prev",
			},
		});
	};

	if (document.querySelector('.jsB11Slider')) {
		const jsB10Slider = new Swiper('.jsB11Slider', {
			spaceBetween: 10,
			slidesPerView: 1.1,
			loop: true,
			breakpoints: {
				500: {
					slidesPerView: 1.8,
					spaceBetween: 10,
					loop: true,
				},
				768: {
					slidesPerView: 2.4,
					spaceBetween: 20,
					loop: true,
				},
				1401: {
					slidesPerView: 4,
					spaceBetween: 20,
					loop: false,
				},
			},
			navigation: {
				nextEl: ".products-list__next",
				prevEl: ".products-list__prev",
			},
		});
	};

};

// window.addEventListener("resize", initSwiper);
window.addEventListener("resize", function () {
	// setTimeout(initSwiper, 200);
	initSwiper();
	// swiper.init();
});

initSwiper();


// Инициализация Inputmask
// https://github.com/RobinHerbots/Inputmask

function initInputMask() {
	let formPhone = document.querySelectorAll('.form__phone');
	formPhone.forEach(element => {
		Inputmask({ "mask": "+7 (999) 999-99-99" }).mask(element);
	});
}

initInputMask();

// Инициализация just-validate
// https://github.com/horprogs/Just-validate
// https://just-validate.dev/

function initJustValidatHelpForme() {
	const validation = new JustValidate('.help__form');

	validation
		.addField('.form__phone', [
			{
				rule: 'required',
				errorMessage: 'Введите телефон!',
			},
		])
		.addField('.form__agreement', [
			{
				rule: 'required',
				errorMessage: 'Подтвердите согласие на обработку персональных данных!',
			},
		])
		.addField('.form__email', [
			{
				rule: 'required',
				errorMessage: 'Email обязателен!',
			},
			{
				rule: 'email',
				errorMessage: 'Email не корректен!',
			},
		])
}

if (document.querySelector('.help__form')) {
	initJustValidatHelpForme();
}

function initJustValidatRegistrationForm() {
	const validation = new JustValidate('.registration__form');

	validation
		// .addField('.form__name', [
		// 	{
		// 		rule: 'required',
		// 		errorMessage: 'Введите имя!',
		// 	},
		// 	{
		// 		rule: 'minLength',
		// 		value: 3,
		// 		errorMessage: 'Минимум 3 символа',
		// 	},
		// 	{
		// 		rule: 'maxLength',
		// 		value: 30,
		// 		errorMessage: 'Максимум 30 символов',
		// 	},
		// ])
		.addField('.form__name', [
			{
				rule: 'required',
				errorMessage: 'Введите имя!',
			},
		])
		.addField('.form__phone', [
			{
				rule: 'required',
				errorMessage: 'Введите телефон!',
			},
		])
		.addField('.form__agreement', [
			{
				rule: 'required',
				errorMessage: 'Подтвердите согласие на обработку персональных данных!',
			},
		])
		.addField('.form__email', [
			{
				rule: 'required',
				errorMessage: 'Email обязателен!',
			},
			{
				rule: 'email',
				errorMessage: 'Email не корректен!',
			},
		])
	// .onSuccess((event) => {

	// 	// sentForm();
	// 	// Когда валидация прошла, отправляем форму
	// 	let element = event.target;
	// 	let formData = new FormData(element);
	// 	let xhr = new XMLHttpRequest();
	// 	xhr.onreadystatechange = function () {
	// 		if (xhr.readyState === 4) {
	// 			if (xhr.status === 200) {
	// 				console.log('Отправлено');
	// 				// Закрываем модалку
	// 				element.closest('.modal').classList.remove('show');
	// 				// Показываем другую модалку с ссобщением об успещной отправке
	// 				document.getElementById('modal-05').classList.add('show');
	// 			}
	// 		}
	// 	}

	// 	xhr.open('POST', 'mail.php', true);
	// 	xhr.send(formData);

	// 	element.reset();

	// });
}

if (document.querySelector('.registration__form')) {
	initJustValidatRegistrationForm();
}

function initJustValidatGoodDeal() {
	const validation = new JustValidate('.good-deal__form');

	validation
		.addField('.form__phone', [
			{
				rule: 'required',
				errorMessage: 'Введите телефон!',
			},
		])
		.addField('.form__agreement', [
			{
				rule: 'required',
				errorMessage: 'Подтвердите согласие на обработку персональных данных!',
			},
		])
}

if (document.querySelector('.good-deal__form')) {
	initJustValidatGoodDeal();
}if (document.querySelector('.jsMobileMenuBtnToggle')) {

    let menuPanelInit = function () {
        const menuBtn = document.querySelector('.jsMobileMenuBtnToggle');
        const menu = document.querySelector('.mobile-menu');
        const body = document.querySelector('body');
        // const menuLink = document.querySelectorAll('.menu-link'); // для  меню по секциям
    
        // Показать / скрыть мобильное меню - toggle
        function menuPanelToggle() {
            if (menuBtn.classList.contains('toggle')) {
                menu.classList.add('toggle');
                body.classList.add('toggle');
            } else {
                menu.classList.remove('toggle');
                body.classList.remove('toggle');
            };
        };
    
        // Определяем высоту мобильного меню и размещаем под шапкой
        function menuPanelPosition() {
            const heightViewport = document.documentElement.clientHeight;
            const heightHeader = document.querySelector('.header').offsetHeight;
            const heightMenuOverlay = heightViewport - heightHeader;
            // let posTop = window.pageYOffset;
            let posTop = window.scrollY;
    
            const menuActive = document.querySelector('.mobile-menu.toggle');
    
            if (menuActive) {
                menuActive.style.height = heightMenuOverlay + 'px';
                menuActive.style.top = posTop + heightHeader + 'px';
            };
        };
    
        // Закрыть мобильное меню
        function menuPanelClose() {
            menuBtn.classList.remove('toggle');
            menu.classList.remove('toggle');
            body.classList.remove('toggle');
        };

        // Закрываем мобильное меню по клику вне его
        function menuPanelOnClickClose() {
            document.addEventListener("click", function(e) {
                const target = e.target;
                const its_menu = target == menu || menu.contains(target);
                const its_btnMenu = target == menuBtn;
    
                if (!its_menu && !its_btnMenu) {
                    menuPanelClose();
                };
            });
        };
    
        // Закрыть мобильное меню при resize
        window.addEventListener('resize', function () {
            menuPanelClose();
        }, true);
    
        // Закрываем меню (для меню по секциям)
        // menuLink.forEach(element => {
        //     element.addEventListener("click", menuPanelClose);
        // });


        // Показать / скрыть мобильное меню
        let menuLaunch = function() {
            menuPanelToggle();
            
            // menuPanelPosition();
            menuPanelOnClickClose();
        };

        menuBtn.addEventListener("click", menuLaunch);



        // Добфвляем в панель лого, телефон, почту, соцкнопки, кнопку закрытия панели
        let addElementsInPanel = function() {

            let logo = document.querySelector('.header__logo').cloneNode(true);
            document.querySelector('.mobile-menu__wrapper').prepend(logo);

            let socbtns = document.querySelector('.footer__social').cloneNode(true);
            document.querySelector('.mobile-menu__bottom').prepend(socbtns);
            
            let mail = document.querySelector('.footer__mail').cloneNode(true);
            document.querySelector('.mobile-menu__bottom').prepend(mail);

            let phone = document.querySelector('.header__phone').cloneNode(true);
            document.querySelector('.mobile-menu__bottom').prepend(phone);

            let closeMobileMenuButton = document.createElement('button');
            closeMobileMenuButton.classList.add('mobile-menu__close');    
            document.querySelector('.mobile-menu').append(closeMobileMenuButton);

            closeMobileMenuButton.addEventListener("click", function () {
                menuPanelClose();
            });


        };

        addElementsInPanel();

    };

    menuPanelInit();

};

let toggleMobileSubmenu = function () {
	// Если есть хоть один элемент
	if (document.querySelector('.nav-list__item--dropdown')) {

		// Если мобильный режим
		if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)) {
			//Выбираем все нужные ссылки
			let navLinksDown = document.querySelectorAll('.nav-list__item--dropdown');

			navLinksDown.forEach(function(element) {
				// Отслеживаем по ним клик, отменяем стандартное действие
				element.addEventListener('click', function(e) {
					e.preventDefault();
					element.classList.toggle('toggle');
				});
			});
		};
	};
};

toggleMobileSubmenu();// -include './myscripts/accordeon.js'
		// -include './myscripts/blazy-init.js'
	}
);
